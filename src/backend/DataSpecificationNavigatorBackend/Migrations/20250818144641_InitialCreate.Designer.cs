// <auto-generated />
using System;
using DataSpecificationNavigatorBackend.ConnectorsLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataSpecificationNavigatorBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250818144641_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataSpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataSpecificationSubstructure")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("SuggestedMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DataSpecificationId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataspecerPackageUuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwlContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataSpecifications");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationItem", b =>
                {
                    b.Property<int>("DataSpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Iri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("DataSpecificationId", "Iri");

                    b.ToTable("DataSpecificationItems");

                    b.HasDiscriminator().HasValue("DataSpecificationItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationItemMapping", b =>
                {
                    b.Property<int>("ItemDataSpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemIri")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserMessageId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelectTarget")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MappedWords")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ItemDataSpecificationId", "ItemIri", "UserMessageId");

                    b.HasIndex("UserMessageId");

                    b.ToTable("ItemMappings");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationPropertySuggestion", b =>
                {
                    b.Property<int>("PropertyDataSpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SuggestedPropertyIri")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonForSuggestion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PropertyDataSpecificationId", "SuggestedPropertyIri", "UserMessageId");

                    b.HasIndex("UserMessageId");

                    b.ToTable("PropertySuggestions");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConversationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");

                    b.HasDiscriminator().HasValue("Message");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.UserSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConversationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilterExpression")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSelectTarget")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedPropertyIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("UserSelections");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.ClassItem", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.DataSpecificationItem");

                    b.HasDiscriminator().HasValue("ClassItem");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.PropertyItem", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.DataSpecificationItem");

                    b.Property<string>("DomainIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("DataSpecificationId", "DomainIri");

                    b.HasDiscriminator().HasValue("PropertyItem");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.ReplyMessage", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.Message");

                    b.PrimitiveCollection<string>("MappedItemsIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MappingText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrecedingUserMessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SparqlQuery")
                        .HasColumnType("TEXT");

                    b.Property<string>("SparqlText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SuggestPropertiesText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("SuggestedPropertiesIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("PrecedingUserMessageId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("ReplyMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.UserMessage", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.Message");

                    b.Property<Guid?>("ReplyMessageId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ReplyMessageId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("UserMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.WelcomeMessage", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.Message");

                    b.HasDiscriminator().HasValue("WelcomeMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DatatypePropertyItem", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.PropertyItem");

                    b.Property<string>("RangeDatatypeIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("DatatypePropertyItem");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.ObjectPropertyItem", b =>
                {
                    b.HasBaseType("DataSpecificationNavigatorBackend.Model.PropertyItem");

                    b.Property<string>("RangeIri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("DataSpecificationId", "RangeIri");

                    b.HasDiscriminator().HasValue("ObjectPropertyItem");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.Conversation", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.DataSpecification", "DataSpecification")
                        .WithMany()
                        .HasForeignKey("DataSpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSpecification");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationItem", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.DataSpecification", "DataSpecification")
                        .WithMany()
                        .HasForeignKey("DataSpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSpecification");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationItemMapping", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.UserMessage", "UserMessage")
                        .WithMany()
                        .HasForeignKey("UserMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataSpecificationNavigatorBackend.Model.DataSpecificationItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemDataSpecificationId", "ItemIri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("UserMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.DataSpecificationPropertySuggestion", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.UserMessage", "UserMessage")
                        .WithMany()
                        .HasForeignKey("UserMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataSpecificationNavigatorBackend.Model.PropertyItem", "SuggestedProperty")
                        .WithMany()
                        .HasForeignKey("PropertyDataSpecificationId", "SuggestedPropertyIri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuggestedProperty");

                    b.Navigation("UserMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.Message", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.UserSelection", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.Conversation", "Conversation")
                        .WithMany("UserSelections")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.PropertyItem", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.ClassItem", "Domain")
                        .WithMany()
                        .HasForeignKey("DataSpecificationId", "DomainIri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.ReplyMessage", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.UserMessage", "PrecedingUserMessage")
                        .WithOne()
                        .HasForeignKey("DataSpecificationNavigatorBackend.Model.ReplyMessage", "PrecedingUserMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrecedingUserMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.UserMessage", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.ReplyMessage", "ReplyMessage")
                        .WithOne()
                        .HasForeignKey("DataSpecificationNavigatorBackend.Model.UserMessage", "ReplyMessageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ReplyMessage");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.ObjectPropertyItem", b =>
                {
                    b.HasOne("DataSpecificationNavigatorBackend.Model.ClassItem", "Range")
                        .WithMany()
                        .HasForeignKey("DataSpecificationId", "RangeIri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Range");
                });

            modelBuilder.Entity("DataSpecificationNavigatorBackend.Model.Conversation", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserSelections");
                });
#pragma warning restore 612, 618
        }
    }
}
