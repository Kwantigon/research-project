I need to pick a framework for the frontend and a framework for the backend.
I want to do backend in C# simply because I like that language.

.NET has something called Blazor for web applications.
There is a Blazor Web App, which supports both server-side rendering and client interactivity.
	- Presumably this can be used for both the frontend and the backend.
	- It could be nice to have the both in the same framework.
Then there is a Blazor Server App.
	- Presumably only for the backend.
	- And the frontend will use something else.

It would make sense to separate the frontend and the backend if I'm worried about scalability. In this project I don't expect that to be a problem.

For now, I will choose the Blazor Web App and do both the frontend and the backend using that.

Maybe I misunderstood. Blazor Web App might be the frontend framework and Blazor Server App the backend.
Here is an answer about it: https://stackoverflow.com/a/77691622
Blazor Web App is newer and I should use that.

Blazor seems to be some kind of full stack thing that packages frontend and backend together.
I might be better off separating them. So I'll pick something for the backend and something for the frontend.
	- Could be one project for the backend using ASP.NET
	- Another project for the frontend using Blazor or any other framework.

**DECISION**: I will use an ASP.NET Core Empty Project to create my backend API.